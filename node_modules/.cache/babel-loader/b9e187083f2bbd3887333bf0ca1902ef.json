{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\React ToDo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [input, setInput] = useState();\n  const [items, setItems] = useState([]);\n\n  const inputHandler = () => {\n    setItems(prevItems => {\n      return [...prevItems, input];\n    });\n    setInput(\"\");\n  };\n\n  const addItem = e => {\n    setInput(e.target.value);\n  };\n\n  const delBtn = ind => {\n    console.log(\"deleting\");\n    setItems(prevItems => {\n      return prevItems.filter((arr, index) => {\n        return ind !== index;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Write Your Note\",\n          onChange: addItem,\n          id: \"note\",\n          name: \"note\",\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addBtn\",\n          onClick: inputHandler,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TodoItem\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map((itemVal, ind) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contain\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delBtn\",\n                onClick: () => {\n                  delBtn(ind);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                id: ind,\n                children: itemVal\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"zrPllszJfXM/702mpuh84fhlr+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React Projects/React ToDo/src/App.js"],"names":["React","useState","Header","Footer","App","input","setInput","items","setItems","inputHandler","prevItems","addItem","e","target","value","delBtn","ind","console","log","filter","arr","index","map","itemVal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBL,QAAQ,EAAnC;AACA,QAAM,CAACM,KAAD,EAASC,QAAT,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAEE,SAAD,IAAa;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAgBL,KAAhB,CAAP;AAED,KAHO,CAAR;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAOA,QAAMK,OAAO,GAAIC,CAAD,IAAO;AACrBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAV,IAAAA,QAAQ,CAAEE,SAAD,IAAa;AACpB,aAAOA,SAAS,CAACS,MAAV,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAAc;AACpC,eAAOL,GAAG,KAAGK,KAAb;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD,GAPD;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,iBAA/B;AAAiD,UAAA,QAAQ,EAAEV,OAA3D;AAAoE,UAAA,EAAE,EAAC,MAAvE;AAA8E,UAAA,IAAI,EAAC,MAAnF;AAA0F,UAAA,KAAK,EAAEN;AAAjG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEG;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEI,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA,oBAIIF,KAAK,CAACe,GAAN,CAAU,CAACC,OAAD,EAAWP,GAAX,KAAoB;AAC5B,gCAAO;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCAAyB;AAAQ,gBAAA,SAAS,EAAC,QAAlB;AAA2B,gBAAA,OAAO,EAAE,MAAI;AAACD,kBAAAA,MAAM,CAACC,GAAD,CAAN;AAAY,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzB,eACP;AAAI,gBAAA,SAAS,EAAC,MAAd;AAA+B,gBAAA,EAAE,EAAEA,GAAnC;AAAA,0BACCO;AADD,iBAA0BP,GAA1B;AAAA;AAAA;AAAA;AAAA,sBADO,eAGJ;AAAA;AAAA;AAAA;AAAA,sBAHI;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAID,WALD;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CAlDD;;GAAMZ,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import React , {useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  \n  const [input , setInput] = useState();\n  const [items , setItems] = useState([]);\n\n  const inputHandler = () => {\n    setItems((prevItems)=>{\n      return [...prevItems , input]\n    \n    })\n    setInput(\"\")\n  }\n  const addItem = (e) => {\n    setInput(e.target.value)\n  }\n  const delBtn = (ind) => {\n    console.log(\"deleting\");\n    setItems((prevItems)=>{\n      return prevItems.filter((arr, index)=>{\n        return ind!==index\n      })\n    })\n  }\n  return (\n    <>\n      <Header/>\n      <div className=\"TodoBox\">\n        <div className=\"input\">\n          <input type=\"text\" placeholder=\"Write Your Note\" onChange={addItem} id=\"note\" name=\"note\" value={input} />\n           <button className=\"addBtn\" onClick={inputHandler}> + </button>\n        </div>\n        <div className=\"TodoItem\">\n          <ul>\n            {/* <button className=\"delBtn\">X</button> */}\n           \n            {\n              items.map((itemVal , ind ) => {\n                return <div className=\"contain\"><button className=\"delBtn\" onClick={()=>{delBtn(ind)}}>X</button>\n                <li className=\"item\" key={ind} id={ind}>\n                {itemVal}\n              </li><br/></div>\n              })\n            }\n          </ul>\n      </div>\n      </div>\n     \n      <Footer/>\n      </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}